@startuml
hide empty members
skinparam linetype ortho

class Entry

class Attribute

class LDAPConnectionOptions
{
    QString host
    
    int port
    int version

    QString basedn
    QString username
    QString password

    bool simpleAuth
    bool useSSL
    bool useSASL
    bool useAnonymous
    
    int  timeout

    bool useTLS
    
    QString cacertfile
    QString certfile
    QString keyfile
}

class LDAPDatabase
{
+ LDAPDatabase(const LDAPDatabase &other)
+ LDAPDatabase()
+ LDAPDatabase(const LDAPConnectionOptions& options)
+ LDAPDatabase &	operator=(const LDAPDatabase &other)
+ ~LDAPDatabase()

+ void close()
+ LDAPConnectionOptions connectionOptions() const
}

class AttributeModelPrivate
{
+ LDAPDatabase& db
+ Entry& entry
+ QString baseDN;

+ LDAPTreeModelPrivate(const LDAPDatabase& db = LDAPDatabase())
}

class AttributeModel extends QAbstractItemModel
{
+ AttributeModel(QObject *parent = nullptr, const Entry& entry, const LDAPDatabase &db = LDAPDatabase())

+ void setEntry(const Entry& entry);
+ void setBaseDN(const QString& baseDN);

+ QModelIndex addAttribute(const Attribute& attribute)
+ bool removeAttribute(const Attribute& attribute)

-- Reimplemented Public Functions --
+ bool canFetchMore(const QModelIndex &parent) const
+ void clear()
+ bool clearItemData(const QModelIndex &index)
+ int columnCount(const QModelIndex &parent = QModelIndex()) const
+ QVariant data(const QModelIndex &index, int role = Qt::DisplayRole) const
+ Qt::ItemFlags	flags(const QModelIndex &index) const
+ void fetchMore(const QModelIndex& parent)
+ bool hasChildren(const QModelIndex &parent) const
+ QVariant headerData(int section, Qt::Orientation orientation, int role = Qt::DisplayRole) const
+ bool insertRows(int row, int count, const QModelIndex &parent = QModelIndex())
+ bool removeColumns(int column, int count, const QModelIndex &parent = QModelIndex())
+ bool removeRows(int row, int count, const QModelIndex &parent = QModelIndex())
+ int rowCount(const QModelIndex &parent = QModelIndex()) const
+ bool setData(const QModelIndex &index, const QVariant &value, int role = Qt::EditRole)
+ void sort(int column, Qt::SortOrder order)

- QScopedPointer<AttributeModelPrivate> d
}

AttributeModel "1" *--> "1" AttributeModelPrivate : contains

AttributeModelPrivate --> LDAPDatabase : references

LDAPDatabase "1" *--> "1" LDAPConnectionOptions : contains

Entry "many" *--> "1" Attribute : contains

AttributeModelPrivate "1" --> "1" Entry : references
@enduml
